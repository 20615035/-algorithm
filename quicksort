#include <iostream> 
#include <chrono> 

using namespace std;
void Swap(int list[], int index1, int index2) {
    int tmp = list[index1];
    list[index1] = list[index2];
    list[index2] = tmp;
}

int Partition(int list[], int left, int right) {
    int low = left + 1;
    int high = right;
    int pivot = list[left];

    while (low <= high) {
        while (low <= right && list[low] < pivot) low++; 
        while (high >= left && list[high] > pivot) high--;

        if (low < high) {
            Swap(list, low, high);
        }
    }

    Swap(list, left, high);
    return high;
}

void QuickSort(int list[], int left, int right) {
    if (left < right) {
        int q = Partition(list, left, right);
        QuickSort(list, left, q - 1);
        QuickSort(list, q + 1, right);
    }
}

int main() {
    int list[] = { 38, 7, 16, 25, 3, 62 };
    int size = sizeof(list) / sizeof(list[0]); 

    auto start = chrono::high_resolution_clock::now();

    QuickSort(list, 0, size - 1);

    auto end = chrono::high_resolution_clock::now();

    chrono::duration<double, milli> duration = end - start;

    cout << "정렬된 배열: ";
    for (int i = 0; i < size; i++) {
        cout << list[i] << " ";
    }
    cout << endl;

    cout << "실행시간: " << duration.count() << " ms" << endl;

    return 0;
}
